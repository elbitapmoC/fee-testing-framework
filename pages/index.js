import { useState } from "react";
import Head from "next/head";
import Footer from "../components/Footer";
import PopularJSQ from "../components/PopularJSQ";
import Map from "../components/Map";
import Filter from "../components/Filter";
import ForEach from "../components/ForEach";
import Reduce from "../components/Reduce";
import Debouncing from "../components/Debouncing";
import UseEffect from "../components/UseEffect";
import UseReduce from "../components/UseReduce";
import UseRef from "../components/UseRef";
import UseState from "../components/UseState";

export default function Home() {
  const [count, setCount] = useState(1);

  return (
    <div className="p-4">
      <style jsx>{`
        .main {
          min-height: 85vh;
          padding: 4rem 0;
          flex: 1;
          display: flex;
          flex-direction: column;
          justify-content: center;
          align-items: center;
        }
      `}</style>
      <Head>
        <title>Interview | JS &amp; React Guide </title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="main">
        {/* <PopularJSQ title="A very famous Javascript interview question" /> */}
        <Map
          title=".map( ) Method"
          description="Iterates through array, computes, &amp; returns a new array."
        />
        <ForEach
          title=".forEach( ) Method"
          description="Iterates through array, nothing returned."
        />
        <Filter
          title=".filter( ) Method"
          description="IF condition is met result returned in a new array."
        />
        <Reduce
          title=".reduce( ) Method"
          description="Takes into account a previous, current &amp; an accumulator"
        />
        <Debouncing
          title="Debouncing"
          description="Limits the rate at which a funciton is called."
        />
        <UseState
          title="useState"
          description="Our go-to source for state management."
        />
        <UseReduce
          title="useReducer"
          description="Preferable to useState when you have complex state logic that involves multiple sub-values or when the next state depends on the previous one."
        />
        <UseEffect
          title="useEffect"
          description="Limits the rate at which a funciton is called."
        />
        <UseRef
          title="useRef"
          description="Limits the rate at which a funciton is called."
        />
      </div>
      <Footer />
    </div>
  );
}
